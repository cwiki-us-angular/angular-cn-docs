{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///node_modules/lunr/lunr.js","webpack:///src/app/search/search.worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","version","utils","warn","this","message","console","asString","obj","toString","clone","keys","length","val","Array","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","indexOf","fieldRef","undefined","Set","elements","complete","intersect","other","union","contains","empty","a","b","intersection","element","push","concat","idf","posting","documentCount","documentsWithTerm","Math","log","abs","Token","str","metadata","update","fn","tokenizer","map","toLowerCase","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","result","k","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","fieldVector","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","pages","queryIndex","titleQuery","split","hit","e","addEventListener","data","payload","url","callback","searchDataRequest","XMLHttpRequest","onload","JSON","responseText","open","send","searchInfo","loadIndexFn","pagesData","indexBuilder","page","path","postMessage","error"],"mappings":"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,EAAGS,KAAKb,GAGjBK,EAAM9J,EACN+J,EAAM9I,IAFN4I,EAAK9J,GAGEoK,KAJPT,EAAOW,EAAG,KAIYP,EAAIK,KAAKT,KAAWK,EAAII,KAAKT,MACjDD,EAAIC,IAKRI,EAAM/J,GADN8J,EAAK7I,GAEEmJ,KAAKV,IAAMK,EAAIK,KAAKV,KAEzBA,EAAIA,EAAEW,QADNP,EAAKvJ,EACY,KAKJ,KAAXsJ,IACFH,EAAIG,EAAQvE,cAAgBoE,EAAEQ,OAAO,IAGhCR,GAGF,SAAU/B,GACf,OAAOA,EAAMzC,OAAO/D,KAIxBC,EAAK4E,SAASG,iBAAiB/E,EAAKQ,QAAS,WAmB7CR,EAAKoJ,uBAAyB,SAAUC,GACtC,IAAIC,EAAQD,EAAUE,OAAO,SAAUrD,EAAMsD,GAE3C,OADAtD,EAAKsD,GAAYA,EACVtD,GACN,IAEH,OAAO,SAAUK,GACf,GAAIA,GAAS+C,EAAM/C,EAAMpF,cAAgBoF,EAAMpF,WAAY,OAAOoF,IAiBtEvG,EAAKO,eAAiBP,EAAKoJ,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGFpJ,EAAK4E,SAASG,iBAAiB/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","file":"x","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"RA2L\");\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.8\n * Copyright (C) 2019 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.8\"\n/*!\n * lunr.utils\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2019 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.complete\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2019 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n","/// <reference lib=\"webworker\" />\nimport { WebWorkerMessage } from '../shared/web-worker-message';\nimport * as lunr from 'lunr';\n\nconst SEARCH_TERMS_URL = '/generated/docs/app/search-data.json';\nlet index: lunr.Index;\nconst pages: SearchInfo = {};\n\ninterface SearchInfo {\n  [key: string]: PageInfo;\n}\n\ninterface PageInfo {\n  path: string;\n  type: string;\n  titleWords: string;\n  keyWords: string;\n  topics: string;\n}\n\naddEventListener('message', handleMessage);\n\n// Create the lunr index - the docs should be an array of objects, each object containing\n// the path and search terms for a page\nfunction createIndex(loadIndexFn: IndexLoader): lunr.Index {\n  // The lunr typings are missing QueryLexer so we have to add them here manually.\n  const queryLexer = (lunr as any as { QueryLexer: { termSeparator: RegExp } }).QueryLexer;\n  queryLexer.termSeparator = lunr.tokenizer.separator = /\\s+/;\n  return lunr(function() {\n    this.ref('path');\n    this.field('topics', { boost: 15 });\n    this.field('titleWords', { boost: 10 });\n    this.field('headingWords', { boost: 5 });\n    this.field('members', { boost: 4 });\n    this.field('keywords', { boost: 2 });\n    loadIndexFn(this);\n  });\n}\n\n// The worker receives a message to load the index and to query the index\nfunction handleMessage(message: { data: WebWorkerMessage }): void {\n  const type = message.data.type;\n  const id = message.data.id;\n  const payload = message.data.payload;\n  switch (type) {\n    case 'load-index':\n      makeRequest(SEARCH_TERMS_URL, (searchInfo: PageInfo[]) => {\n        index = createIndex(loadIndex(searchInfo));\n        postMessage({ type, id, payload: true });\n      });\n      break;\n    case 'query-index':\n      postMessage({ type, id, payload: { query: payload, results: queryIndex(payload) } });\n      break;\n    default:\n      postMessage({ type, id, payload: { error: 'invalid message type' } });\n  }\n}\n\n// Use XHR to make a request to the server\nfunction makeRequest(url: string, callback: (response: any) => void): void {\n\n  // The JSON file that is loaded should be an array of PageInfo:\n  const searchDataRequest = new XMLHttpRequest();\n  searchDataRequest.onload = function() {\n    callback(JSON.parse(this.responseText));\n  };\n  searchDataRequest.open('GET', url);\n  searchDataRequest.send();\n}\n\n\n// Create the search index from the searchInfo which contains the information about each page to be indexed\nfunction loadIndex(pagesData: PageInfo[]): IndexLoader {\n  return (indexBuilder: lunr.Builder) => {\n    // Store the pages data to be used in mapping query results back to pages\n    // Add search terms from each page to the search index\n    pagesData.forEach(page => {\n      indexBuilder.add(page);\n      pages[page.path] = page;\n    });\n  };\n}\n\n// Query the index and return the processed results\nfunction queryIndex(query: string): PageInfo[] {\n  try {\n    if (query.length) {\n      let results = index.search(query);\n      if (results.length === 0) {\n        // Add a relaxed search in the title for the first word in the query\n        // E.g. if the search is \"ngCont guide\" then we search for \"ngCont guide titleWords:ngCont*\"\n        const titleQuery = 'titleWords:*' + query.split(' ', 1)[0] + '*';\n        results = index.search(query + ' ' + titleQuery);\n      }\n      // Map the hits into info about each page to be returned as results\n      return results.map(hit => pages[hit.ref]);\n    }\n  } catch (e) {\n    // If the search query cannot be parsed the index throws an error\n    // Log it and recover\n    console.log(e);\n  }\n  return [];\n}\n\ntype IndexLoader = (indexBuilder: lunr.Builder) => void;\n"]}